% "seqstring" = your list of sequence alignments
% "cluster" = how you want to group your sequences
for group = 1:1:max(cluster);
    seqgroups{group} = seqstring(find(cluster==group));
    for i = 1:1:size(seqgroups{group},1);
        cb{group}(i) = codonbias(seqgroups{group}(i,1));
    end
    fields{group} = fieldnames(cb{group});
    cbgrp1{group} = struct2cell(cb{group});
    list{group} = [];
    num{group} = [];
    codons{group} = [];
    aminoacid{group} = [];
    groupid{group} = [];
    codx{group} = [];
    aminocode{group} = [];
    for i = 1:size(cbgrp1{group},3);
        for j = 1:1:21;
            x = struct2cell(cbgrp1{group}{j,i});
            num{group} = [num{group},x{2,1}];
            codons{group} = [codons{group},x{1,1}];
            aminoacid{group} = [aminoacid{group},repelem(fields{group}(j),size(x{1,1},2))];
            codx{group} = [codx{group},1:1:size(x{1,1},2)];
            aminocode{group} = [aminocode{group},repelem(1,size(x{1,1},2))*j];
        end
        groupid = [groupid,repelem(1*i,64)];
    end
    dims{group} = vertcat(aminoacid{group},num2cell(num{group}),codons{group},num2cell(groupid{group}),num2cell(codx{group}),num2cell(aminocode{group}));
end
for i = 1:1:size(dims,2);
    dims_num{i} = vertcat(dims{i},num2cell(repelem(i,size(dims{i},2))));
    dims_num{i} = vertcat(dims_num{i},num2cell(repelem(1:size(dims{i},2)/64,64)));
end
mastermatnums = [];
for i = 1:1:size(dims,2);
    mastermatnums = horzcat([mastermatnums],[dims_num{:}]);
end
mastermat = vertcat(cell2mat(mastermatnums(2,:)),cell2mat(mastermatnums(7,:)),...
    cell2mat(mastermatnums(4,:)),cell2mat(mastermatnums(5,:)),cell2mat(mastermatnums(6,:)));
% Row 1 = percent of codon used (y value)
% Row 2 = sequence replicate from group
% Row 3 = codon type number
% Row 4 = amino acid number
% Row 5 = group number
for findam = 1:1:21;
    aminumidx = find(mastermat(4,:) == findam);
    codonidx = [];
    yvals = [];
    groupvals = [];
    codonidx = [codonidx,mastermat(3,aminumidx)];
    yvals = [yvals,mastermat(1,aminumidx)];
    groupvals = [groupvals,mastermat(5,aminumidx)];
    subplots = [1:1:max(codonidx)];
    figure;
    set(gcf,'visible','on');
    for i = subplots;
        subplot(1,max(codonidx),i);
        x = find(codonidx == i);
        y = yvals(x);
        group = groupvals(x);
        boxplot(y,group);
        title(sprintf('%s', mastermatnums{3,aminumidx(i)}));
        ylim([0 1]);
        % [p,tbl,stats] = anova1(y,group);
        % [c,m,h] = multcompare(stats);
    end
    sgtitle(mastermatnums{1,aminumidx(1)});
    clear('aminumidx','codonidx','findam','group','groupvals','i','subplots','x','y','yvals');
end
for findam = 1:1:21
    aminumidx = find(mastermat(4,:) == findam);
    codonidx = [];
    yvals = [];
    groupvals = [];
    codonidx = [codonidx,mastermat(3,aminumidx)];
    yvals = [yvals,mastermat(1,aminumidx)];
    groupvals = [groupvals,mastermat(5,aminumidx)];
    subplots = [1:1:max(codonidx)];
    for i = subplots;
        x = find(codonidx == i);
        y = yvals(x);
        if isnan(mean(y))~=1
            group = groupvals(x);
            [~,~,stats] = anova1(y,group);
            [c,m] = multcompare(stats);
            pair{findam,i}(:,2) = c(:,1);
            pair{findam,i}(:,3) = c(:,2);
            pair{findam,i}(:,1) = c(:,6)>0.05;
        else
            pair{findam,i}(:,2) = 0;
            pair{findam,i}(:,3) = 0;
            pair{findam,i}(:,1) = 0;
        end
    end
end
for findam = 1:1:21
    if pair{findam,1}== [0,0,0]
        % shared(:,findam) = 1
        continue
    else
        a = horzcat(pair{findam,:})
        shared(:,findam) = sum(a(:,1:3:size(a,2)),2)
    end
end
% the above matrix lists the number of shared codon preferences for each
% amino acid from 1:21, one per column
total = sum(shared,2)
total(:,2) = pair{1,1}(:,2)
total(:,3) = pair{1,1}(:,3)
figure
set(gcf,'visible','on')
HANDLE = gca
get( HANDLE );
set( HANDLE, 'Color', [0.7,0.7,0.7] )
hold on
scatter(total(:,2),total(:,3),2000,total(:,1),'square','filled')
scatter(total(:,3),total(:,2),2000,total(:,1),'square','filled')
for j = 1:6
    line([j j], [0.5 6.5], 'Color', [.7 .7 .7], 'LineStyle',':','LineWidth',1)
    line([0.5 6.5], [j j], 'Color', [.7 .7 .7], 'LineStyle',':','LineWidth',1)
end
textscatter(total(:,2),total(:,3),string(total(:,1)),'ColorData',[1 0.2 0],'FontSize',9)
textscatter(total(:,3),total(:,2),string(total(:,1)),'ColorData',[1 0.2 0],'FontSize',9)
ylim([0.5 6.5])
xlim([0.5 6.5])
yticks([1 2 3 4 5 6])
xticks([1 2 3 4 5 6])
set(gca, 'YDir','reverse')
xticklabels({'Asia','SA Atypical','SA Typical','Southeastern US','Texas','US Common'})
yticklabels({'Asia','SA Atypical','SA Typical','Southeastern US','Texas','US Common'})
box('on')
